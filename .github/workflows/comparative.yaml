name: "Comparative"

on:
  push:
    branches:
      - '**'  # Trigger on push to any branch
  workflow_dispatch:  # Allows manual triggering of the workflow

permissions:
  contents: write
  security-events: write

jobs:
  static-analysis:
    runs-on: ubuntu-latest
    strategy:
      matrix:
        repo: 
          - awsTerraGoat
          - azTerraGoat
          - awsGoat
          - azGoat

    steps:
      - name: Checkout the Repository and Branch
        uses: actions/checkout@v4

      - name: Create Infra Folder
        run: mkdir infra



      - name: Clone and Move Files Based on Repo
        env:
          SONAR_TOKEN: NOCONFIGURED  # Dynamically use the correct secret
        run: |
          export TOKEN=SONAR_TOKEN

          if [[ "${{ matrix.repo }}" == "awsMonkey" ]]; then
            git clone https://github.com/tenable/KaiMonkey.git
            mv KaiMonkey/terraform/aws/* infra/
          
          elif [[ "${{ matrix.repo }}" == "awsTerraGoat" ]]; then
            git clone https://github.com/octodemo/advanced-security-terraform.git
            mv advanced-security-terraform/terraform/aws/* infra/

          elif [[ "${{ matrix.repo }}" == "azTerraGoat" ]]; then
            git clone https://github.com/octodemo/advanced-security-terraform.git
            mv advanced-security-terraform/terraform/azure/* infra/

          elif [[ "${{ matrix.repo }}" == "awsGoat" ]]; then
            git clone https://github.com/ine-labs/AWSGoat.git
            mv AWSGoat/modules/* infra/

          elif [[ "${{ matrix.repo }}" == "azGoat" ]]; then
            git clone https://github.com/ine-labs/AzureGoat.git
            mv AzureGoat/modules/module-1/* infra/
          fi


      - name: Run Checkov in silent mode
        uses: bridgecrewio/checkov-action@master
        with:
          directory: infra/
          framework: terraform
          output_format: sarif
          output_file_path: .
          quiet: true
        continue-on-error: true

      - name: Log after Checkov
        run: |
          echo "Checkov has completed. Moving to TFSec..."
          sleep 4
          ls -lias

      - name: Run TFSec SARIF Report
        uses: aquasecurity/tfsec-sarif-action@v0.1.0
        with:
          sarif_file: tfsec-${{ matrix.repo }}.sarif

      - name: Log after TFSec
        run: |
          echo "TFSec has completed. Zipping the SARIF files..."
          sleep 4
          ls -la

      - name: Zip all SARIF files
        run: |
          zip combined-sarif-${{ matrix.repo }}.zip *.sarif
          echo "Zipped all SARIF files to combined-sarif-${{ matrix.repo }}.zip"
          ls -la

          echo '{"version": "2.1.0", "runs": []}' > combined-${{ matrix.repo }}.sarif

          for file in *.sarif; do
              jq -s '.[0].runs += .[1].runs | .[0]' combined-${{ matrix.repo }}.sarif "$file" > temp.sarif && mv temp.sarif combined-${{ matrix.repo }}.sarif
          done


# sonarqubeRepo:
#   name: "GATHER ALL"
#   runs-on: self-hosted
#   steps:
#     - name: Upload Zipped SARIF as an artifact
#       uses: actions/upload-artifact@v3
#       with:
#         name: combined-sarif-${{ matrix.repo }}.zip
#         path: combined-sarif-${{ matrix.repo }}.zip
#
#     - name: Run SonarQube Analysis
#       env:
#         SONAR_PROJECT_KEY: ${{ matrix.repo }}
#         SONAR_HOST_URL: http://sonarqube:9000
#       run: |
#         sonar-scanner \
#           -Dsonar.projectKey=$SONAR_PROJECT_KEY \
#           -Dsonar.host.url=$SONAR_HOST_URL \
#           -Dsonar.token=$SONAR_TOKEN \
#           -Dsonar.working.directory="/home/docker/.scannerwork"
